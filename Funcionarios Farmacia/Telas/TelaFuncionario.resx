<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAAAABAAAAAQAAAADAAAAAwAAAAQAAAAEAAAAAwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAAAAAAYAAAATwAAAH0AAACaAAAAqAAAAKgAAACaAAAAfQAA
        AE8AAAAYAAAAAAAAAAAAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAA9AAAAsQAAAPQAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPUAAACyAAAAPQAAAAAAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAAAAAwAAAAAAAAAIAAAAmwAAAP8AAAD+AAAA/gAAAPkAAAD4AAAA9wAA
        APoAAAD6AAAA9wAAAPgAAAD5AAAA/gAAAP4AAAD/AAAAnAAAAAgAAAAAAAAAAwAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAABQAAALgAAAD/AAAA+wAAAPsAAAD9AAAA/wAA
        AP8AAAD/AAAA/gAAAP4AAAD/AAAA/wAAAP8AAAD9AAAA+wAAAPsAAAD/AAAAuQAAAAUAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAA8AAAAvwAAABMAAACFAAAA/wAAAPkAAAD+AAAA/wAA
        AP0AAACVAAAAYgAAAHQAAADnAAAA5wAAAHQAAABiAAAAlQAAAP0AAAD/AAAA/gAAAPkAAAD/AAAAhQAA
        ABMAAAC/AAAAPAAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAADEAAADlAAAA9AAAAPIAAAD/AAAA/wAA
        APwAAAD/AAAAeQAAAHQAAADoAAAAqQAAAEoAAABKAAAAqQAAAOgAAAB0AAAAeQAAAP8AAAD8AAAA/wAA
        AP8AAADyAAAA9AAAAOYAAAAxAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAACZAAAA/wAA
        APsAAAD+AAAA/wAAAOwAAABhAAAA/wAAAPsAAAD/AAAAZgAAAGYAAAD/AAAA+wAAAP8AAABhAAAA7AAA
        AP8AAAD+AAAA+wAAAP8AAACZAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAACAAAAAAAAAB0AAADhAAAAuAAA
        AMoAAAD/AAAA/QAAAP8AAAD/AAAA/AAAAPIAAAD6AAAA/wAAAO8AAAAXAAAAFgAAAO8AAAD/AAAA+gAA
        APIAAAD8AAAA/wAAAP8AAAD9AAAA/wAAAMoAAAC3AAAA4AAAAB0AAAAAAAAAAgAAAAEAAAAAAAAAFwAA
        AI4AAAC3AAAA8QAAAP8AAAD+AAAA/wAAAP8AAAD+AAAA/wAAAP4AAAD/AAAA6AAAAKMAAACjAAAA6AAA
        AP8AAAD+AAAA/wAAAP4AAAD/AAAA/wAAAP4AAAD/AAAA8QAAALgAAACPAAAAFwAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAACMAAAA/wAAAPsAAAD/AAAA/gAAAP8AAADEAAAAxQAAAP8AAAD+AAAA/wAA
        AP8AAAD+AAAA/wAAAMQAAADEAAAA/wAAAP4AAAD/AAAA+wAAAP8AAACMAAAAAAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAHAAAAAAAAADcAAAD/AAAA/wAAAPwAAAD/AAAAxQAAAAAAAAAAAAAAxQAA
        AP8AAAD5AAAA+QAAAP8AAADFAAAAAAAAAAAAAADFAAAA/wAAAPwAAAD/AAAA/wAAADcAAAAAAAAABwAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAJcAAAD/AAAA+QAAAP8AAADFAAAAAAAA
        AAAAAADFAAAA/wAAAPwAAAD8AAAA/wAAAMUAAAAAAAAAAAAAAMUAAAD/AAAA+QAAAP8AAACXAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAqQAAAP8AAAD8AAAA/gAA
        AP8AAADEAAAAxAAAAP8AAAD+AAAA/wAAAP8AAAD+AAAA/wAAAMQAAADEAAAA/wAAAP4AAAD8AAAA/wAA
        AKkAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAB0AAAD1AAAA/wAA
        AP4AAAD/AAAA/gAAAP8AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAP8AAAD+AAAA/wAA
        AP4AAAD/AAAA9AAAAB0AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAUQAA
        AP8AAAD8AAAA/wAAAP8AAAD/AAAA/AAAAP0AAAD+AAAA/AAAAPwAAAD8AAAA/AAAAP4AAAD9AAAA/AAA
        AP8AAAD/AAAA/wAAAPwAAAD/AAAAUQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAAB1AAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        AP0AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAAB1AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAAIEAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAA2QAAAEMAAABOAAAATgAA
        AEMAAADZAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD7AAAA/wAAAIEAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAAcwAAAP8AAAD7AAAA/wAAAP8AAAD6AAAA/wAAAOMAAAAnAAAAAAAA
        AAIAAAACAAAAAAAAACcAAADjAAAA/wAAAPoAAAD/AAAA/wAAAPsAAAD/AAAAcwAAAAAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABMAAAA/wAAAPsAAAD7AAAA+wAAAP8AAADTAAAAIQAA
        AAAAAAAFAAAAAwAAAAMAAAAFAAAAAAAAACEAAADTAAAA/wAAAPsAAAD7AAAA+wAAAP8AAABLAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABUAAADtAAAA/wAAAP0AAAD/AAAAnQAA
        AAwAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAwAAACdAAAA/wAAAP0AAAD/AAAA7QAA
        ABUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAJIAAADwAAAApQAA
        ADoAAAAAAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAAAAAA5AAAApAAA
        APAAAACSAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAA
        AAgAAAAAAAAAAAAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAA
        AAAAAAAAAAAACAAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////D///0AC//2Tyb/6IARfpIABJaIAAEWkAAAlIAAABCAA
        AATIAAATQAAAAkAAAALIAAATSBgYEuQYGCfkAAAn6AAAF+gAABfoAAAX6AAAF+gCQBfoBCAX6ApQF+Ql
        pCfky9En6Tfsl/Rf+i////////////////8=
</value>
  </data>
</root>